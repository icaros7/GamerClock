#include "stdafx.h"
#include "QSVEncoderTask.h"
//////////////////////////////////////////////////////////////////////
CQSVEncoderTask::CQSVEncoderTask()
{
	m_syncpVPP	= NULL;
	m_syncpEnc	= NULL;

	ZeroMemory(&m_bitstream, sizeof(m_bitstream));
}
//////////////////////////////////////////////////////////////////////
CQSVEncoderTask::~CQSVEncoderTask()
{
	Uninit();
}
//////////////////////////////////////////////////////////////////////
void CQSVEncoderTask::Uninit()
{
	if (m_bitstream.Data)
	{
		delete [] m_bitstream.Data;

		m_bitstream.Data = NULL;
	}
}
//////////////////////////////////////////////////////////////////////
void CQSVEncoderTask::Init(DWORD dwSize)
{
	Uninit();

	ZeroMemory(&m_bitstream, sizeof(m_bitstream));

	m_bitstream.MaxLength	= dwSize;
	m_bitstream.Data		= new mfxU8[m_bitstream.MaxLength];
}
//////////////////////////////////////////////////////////////////////
void CQSVEncoderTask::SetSyncPointVPP(mfxSyncPoint syncpVPP)
{
	m_syncpVPP = syncpVPP;
}
//////////////////////////////////////////////////////////////////////
void CQSVEncoderTask::SetSyncPointEnc(mfxSyncPoint syncpEnc)
{
	m_syncpEnc = syncpEnc;
}
//////////////////////////////////////////////////////////////////////
mfxSyncPoint CQSVEncoderTask::GetSyncPointVPP()
{
	return m_syncpVPP;
}
//////////////////////////////////////////////////////////////////////
mfxSyncPoint CQSVEncoderTask::GetSyncPointEnc()
{
	return m_syncpEnc;
}
//////////////////////////////////////////////////////////////////////
mfxBitstream* CQSVEncoderTask::GetBitstream()
{
	return &m_bitstream;
}
//////////////////////////////////////////////////////////////////////
